<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                http://www.springframework.org/schema/context
                 http://www.springframework.org/schema/context/spring-context-3.2.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">



	<!-- 加载JDBC配置文件 -->
	<context:property-placeholder location="classpath:datasource.properties"
		ignore-unresolvable="true" />

	<!-- 指定数据源 -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
	</bean>

	<!-- 在使用mybatis时 spring使用sqlsessionFactoryBean 来管理mybatis的sqlsessionFactory -->
	<!-- 而像这种使用接口实现的方式 是使用sqlsessionTemplate来进行操作的，他提供了一些方法 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- mybatis配置文件路径 -->
		<property name="configLocation" value="" />
		<!-- 实体类映射文件路径 -->
		<property name="mapperLocations" value="blogMapperSupport.xml" />
	</bean>
	<!-- 配置sqlsession 产生这个实例就是通过 sqlsessionTemplate来实现的 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0">
			<ref bean="sqlSessionFactory" />
		</constructor-arg>
	</bean>

	<!-- 业务类 的配置 -->
	<bean id="blogDaoSupportImp" class="com.inspur.mybatisSuport.BlogDaoSupportImp">
		<!--注入SqlSessionTemplate实例 -->
		<property name="sqlSessionTemplate" ref="sqlSession" />

		<!--也可直接注入SqlSessionFactory实例，二者都指定时，SqlSessionFactory失效 -->

		<!-- <property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->

	</bean>
</beans>